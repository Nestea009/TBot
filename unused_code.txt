First Strategy

if actual_price > (last_bought * 1.001):
  PlaceSellAPPL()
  print("Sold because benefit!")
  time.sleep(120)
  last_bought == PlaceBuyAAPL()

if actual_price < (last_bought * 0.999):
  PlaceSellAPPL()
  print("Sold because loss...")
  print(last_bought, actual_price)
  time.sleep(300)
  last_bought == PlaceBuyAAPL()

Stuff to do 

1. Organize the "actual_price" things into a def to not repeat that much code
2. Finish current rules
3. Make a def for "WAIT FOR A RISE" and "WAIT FOR A FALL"
4. Do more rules
5. Organize everything


    #Rule 1
    #If we're winning money, wait for a maximmum and sell
    #Then wait for a rise and buy

    if actual_price > (last_bought * 1.001): #If we're winning money

      WaitForFall(actual_price)
      WaitForRise(actual_price)
            
    #Rule 2
    #If we're loosing money, do not wait, sell inmediately
    #Wait for a minnimum to buy, but if fall continues sell inmediately

    if actual_price < (last_bought * 0.999): #If we're loosing money
      true_var = True
      last_lost = actual_price
      time.sleep(5) #Wait for the price to change
      current = requests.get(last_trade_url, headers=headers)
      current_json = current.json()
      current_price = current_json['trade']
      actual_price = current_price['p']

      if actual_price < last_lost: # If we're still loosing
        PlaceSellAPPL(actual_price) # Sell at a loss
        WaitForRise(actual_price) 

      elif actual_price >= last_lost: #However, if we're suddenly winning
        WaitForFall(actual_price)
        WaitForRise(actual_price) 


    #Rule 3
    #If market is going to close, sell (?)

